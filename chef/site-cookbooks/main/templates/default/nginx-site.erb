# Generated by Chef, do not edit

<%- server_names = node[:skeleton][:server_names] -%>
<%- flask_port = node[:skeleton][:flask_port] -%>
<%- log_dir = node[:skeleton][:log_dir] -%>
<%- server_aliases = node[:skeleton][:server_aliases] -%>
<%- site_dir = node[:skeleton][:site_dir] -%>
server {

    listen                80;
    server_name           <%= server_names.join(' ') %>;
    root                  <%= site_dir %>/static;
    access_log            <%= log_dir %>/access.log json;
    error_log             <%= log_dir %>/error.log;

    <%- if node[:skeleton][:htpasswd] -%>
    auth_basic            "Restricted";
    auth_basic_user_file  "<%= site_dir %>/../.htpasswd";
    <%- end -%>

    <%- if node[:skeleton][:blocked_keywords] -%>
    location ~* (<%= node[:skeleton][:blocked_keywords].join("|") %>) {
        return 444;
    }
    <%- end -%>

    location ~ \.(css|gif|jpeg|jpg|js|png)$ {
        expires           1w;
        try_files         $uri @flask;
    }

    location / {
        try_files         $uri @flask;
    }

    location @flask {
        proxy_set_header   Host $http_host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_redirect     off;
        proxy_pass         http://localhost:<%= flask_port %>;
    }
}

<%- if node[:skeleton][:enable_check_servername] -%>
server {
    listen                80 default;
    server_name           _;
    return                301 http://<%= server_names[0] %>$1;
}
<%- end -%>
